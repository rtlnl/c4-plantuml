!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/release/1-0/C4_Container.puml
!includeurl https://raw.githubusercontent.com/rtlnl/c4-plantuml/master/sprites.puml

!define CONTAINER_P1_BG_COLOR #d54343
!define CONTAINER_P1_BORDER_COLOR #750303

!define CONTAINER_P2_BG_COLOR #f8891b
!define CONTAINER_P2_BORDER_COLOR #984f05

!define EXTERNAL_SYSTEM_P1_BG_COLOR #f9d1d1
!define EXTERNAL_SYSTEM_P1_BORDER_COLOR #897474

!define EXTERNAL_SYSTEM_P2_BG_COLOR #ffd1a4
!define EXTERNAL_SYSTEM_P2_BORDER_COLOR #83501c

!define CONTAINER_ALT_BG_COLOR #008d08
!define CONTAINER_ALT_BORDER_COLOR #084d09

!define CONTAINER_BORDER_COLOR #3C7FC0

skinparam queue {
    StereotypeFontSize 12
    StereotypeFontColor #ffffff
    shadowing false

    FontColor<<container_bus>> ELEMENT_FONT_COLOR
    BackgroundColor<<container_bus>> CONTAINER_BG_COLOR
    BorderColor<<container_bus>> CONTAINER_BORDER_COLOR

    FontColor<<container_bus_p1>> ELEMENT_FONT_COLOR
    BackgroundColor<<container_bus_p1>> CONTAINER_P1_BG_COLOR
    BorderColor<<container_bus_p1>> CONTAINER_P1_BORDER_COLOR

    FontColor<<container_bus_p2>> ELEMENT_FONT_COLOR
    BackgroundColor<<container_bus_p2>> CONTAINER_P2_BG_COLOR
    BorderColor<<container_bus_p2>> CONTAINER_P2_BORDER_COLOR
}

skinparam rectangle {
    FontColor<<system_ext_p1>> #000
    FontColor<<system_ext_p2>> #000
    FontColor<<container_p1>> ELEMENT_FONT_COLOR
    FontColor<<container_p2>> ELEMENT_FONT_COLOR
    FontColor<<container_alt>> ELEMENT_FONT_COLOR

    BackgroundColor<<system_ext_p1>> EXTERNAL_SYSTEM_P1_BG_COLOR
    BackgroundColor<<system_ext_p2>> EXTERNAL_SYSTEM_P2_BG_COLOR
    BackgroundColor<<container_p1>> CONTAINER_P1_BG_COLOR
    BackgroundColor<<container_p2>> CONTAINER_P2_BG_COLOR
    BackgroundColor<<container_alt>> CONTAINER_ALT_BG_COLOR

    BorderColor<<system_ext_p1>> EXTERNAL_SYSTEM_P1_BORDER_COLOR
    BorderColor<<system_ext_p2>> EXTERNAL_SYSTEM_P2_BORDER_COLOR
    BorderColor<<container_p1>> CONTAINER_P1_BORDER_COLOR
    BorderColor<<container_p2>> CONTAINER_P2_BORDER_COLOR
    BorderColor<<container_alt>> CONTAINER_ALT_BORDER_COLOR
}

skinparam database {
    FontColor<<container_p1>> ELEMENT_FONT_COLOR
    FontColor<<container_p2>> ELEMENT_FONT_COLOR
    BackgroundColor<<container_p1>> CONTAINER_P1_BG_COLOR
    BackgroundColor<<container_p2>> CONTAINER_P2_BG_COLOR
    BorderColor<<container_p1>> CONTAINER_P1_BORDER_COLOR
    BorderColor<<container_p2>> CONTAINER_P2_BORDER_COLOR
}


!define ContainerBus(e_alias, e_label, e_techn) queue "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<container_bus>> as e_alias
!define ContainerBus_P1(e_alias, e_label, e_techn) queue "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<container_bus_p1>> as e_alias
!define ContainerBus_P2(e_alias, e_label, e_techn) queue "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<container_bus_p2>> as e_alias

!define Container_P1(e_alias, e_label, e_techn) rectangle "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<container_p1>> as e_alias
!define ContainerDb_P1(e_alias, e_label, e_techn) database "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<container_p1>> as e_alias
!define Container_P2(e_alias, e_label, e_techn) rectangle "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<container_p2>> as e_alias
!define ContainerDb_P2(e_alias, e_label, e_techn) database "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<container_p2>> as e_alias
!define Container_Alt(e_alias, e_label, e_techn) rectangle "==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<container_alt>> as e_alias

!define System_Ext_P1(e_alias, e_label) rectangle "==e_label" <<system_ext_p1>> as e_alias
!define System_Ext_P1(e_alias, e_label, e_descr) rectangle "==e_label\n\n e_descr" <<system_ext_p1>> as e_alias

!define System_Ext_P2(e_alias, e_label) rectangle "==e_label" <<system_ext_p2>> as e_alias
!define System_Ext_P2(e_alias, e_label, e_descr) rectangle "==e_label\n\n e_descr" <<system_ext_p2>> as e_alias

!define RelAsync(e_from,e_to, e_label) Rel_(e_from,e_to, e_label, "..>")
!define RelAsync(e_from,e_to, e_label, e_techn) Rel_(e_from,e_to, e_label, e_techn, "..>")

!define RelBi(e_from,e_to, e_label) Rel_(e_from,e_to, e_label, "<-->")
!define RelBi_Left(e_from,e_to, e_label) Rel_(e_from,e_to, e_label, "<-Left->")
!define RelBi(e_from,e_to, e_label, e_techn) Rel_(e_from,e_to, e_label, e_techn, "<-->")

!define Rel(e_from, e_to) e_from --> e_to

!definelong LAYOUT_WITH_LEGEND_EXT
hide stereotype
legend right
|=              |= Type |
|<PERSON_BG_COLOR>      | person |
|<EXTERNAL_PERSON_BG_COLOR>      | external person |
|<SYSTEM_BG_COLOR>   | system |
|<EXTERNAL_SYSTEM_P1_BG_COLOR>   | external system p1 |
|<EXTERNAL_SYSTEM_P2_BG_COLOR>   | external system p2 |
|<EXTERNAL_SYSTEM_BG_COLOR>      | external system p3 |
|<CONTAINER_P1_BG_COLOR>   | container p1 |
|<CONTAINER_P2_BG_COLOR>   | container p2 |
|<CONTAINER_BG_COLOR>   | container p3 |
endlegend
!enddefinelong

!define Container_Router(e_alias, e_label, e_techn) rectangle "<$router>\n\n==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<container>> as e_alias
!define Container_Router(e_alias, e_label, e_techn, e_descr) rectangle "<$router>\n\n==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//\n\n e_descr" <<container>> as e_alias

!define Container_Switch(e_alias, e_label, e_techn) rectangle "<$switch>\n\n==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<container>> as e_alias
!define Container_Switch(e_alias, e_label, e_techn, e_descr) rectangle "<$switch>\n\n==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//\n\n e_descr" <<container>> as e_alias

!define Container_Storage(e_alias, e_label, e_techn) rectangle "<$hard_disk>\n\n==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<container>> as e_alias
!define Container_Storage(e_alias, e_label, e_techn, e_descr) rectangle "<$hard_disk>\n\n==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//\n\n e_descr" <<container>> as e_alias

!define System_Storage(e_alias, e_label, e_techn) rectangle "<$hard_disk>\n\n==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<system>> as e_alias
!define System_Storage(e_alias, e_label, e_techn, e_descr) rectangle "<$hard_disk>\n\n==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//\n\n e_descr" <<system>> as e_alias

!define Container_Loadbalancer(e_alias, e_label, e_techn) rectangle "<$load_balancer>\n\n==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<container>> as e_alias
!define Container_Loadbalancer(e_alias, e_label, e_techn, e_descr) rectangle "<$load_balancer>\n\n==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//\n\n e_descr" <<container>> as e_alias

!define Container_Encoder(e_alias, e_label, e_techn) rectangle "<$video_gateway>\n\n==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<container>> as e_alias
!define Container_Encoder(e_alias, e_label, e_techn, e_descr) rectangle "<$video_gateway>\n\n==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//\n\n e_descr" <<container>> as e_alias

!define System_Encoder(e_alias, e_label, e_techn) rectangle "<$video_gateway>\n\n==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//" <<system>> as e_alias
!define System_Encoder(e_alias, e_label, e_techn, e_descr) rectangle "<$video_gateway>\n\n==e_label\n//<size:TECHN_FONT_SIZE>[e_techn]</size>//\n\n e_descr" <<system>> as e_alias